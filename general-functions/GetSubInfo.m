function [age, gender, ethnicity, handedness] = GetSubInfo()

% function [age, gender, ethnicity, handedness] = GetSubInfo(win)
% 
% uicontrol-based GUI function that asks subjects to input their age,
% gender, ethnicity, and handedness

%% Initialization
age = []; gender = []; ethnicity = []; handedness = []; 

%% Misc.
%Figure
S.fh = figure('units','normalized',...
              'position',[0 0 1 1],...
              'menubar','none',...
              'name','SubInfo',...
              'numbertitle','off',...
              'resize','on');
%Title          
%use style-edit instead of style-text since edit center aligns vertically, 
%while text top-alignes vertically. Just have to set 'Enable' to 'inactive'
S.txt = uicontrol('style','edit','Enable','inactive',... 
                    'units','normalized',...
                    'position',[0.25 0.85 0.5 0.07],...
                    'string','Please input the following information',...
                    'fontweight','bold',...
                    'fontsize',16);  

%% Age
A.txt = uicontrol('style','edit', 'Enable','inactive',...
                    'units','normalized',...   
                    'position',[0.3 0.73 0.1 0.05],...
                    'string','Age:',...
                    'horizontalalign','center',...
                    'fontweight','bold',...
                    'fontsize',14);
A.ed = uicontrol('style','edit',...
                    'units','normalized',...
                    'position',[0.41 0.73 0.05 0.05],...
                    'horizontalalign','left',...
                    'fontsize',14);

%% Gender
G.txt = uicontrol('style','edit', 'Enable','inactive',...
                    'units','normalized',...   
                    'position',[0.3 0.66 0.1 0.05],...
                    'string','Gender:',...
                    'horizontalalign','center',...
                    'fontweight','bold',...
                    'fontsize',14);  
G.pop = uicontrol('style','pop',...
                 'units','normalized',... 
                 'position',[0.41 0.66 0.1 0.05],...
                 'string',{'Male','Female'},...
                 'fontsize',14); 

%% Ethnicity
E.txt = uicontrol('style','edit', 'Enable','inactive',...
                    'units','normalized',...
                    'position',[0.3 0.59 0.1 0.05],...
                    'string','Ethnicity:',...
                    'horizontalalign','center',...
                    'fontweight','bold',...
                    'fontsize',14);
E.pop = uicontrol('style','pop',...
                    'units','normalized',... 
                    'position',[0.41 0.59 0.13 0.05],...
                    'string',{'White/Caucasian','Hispanic or Latino','Black or African American','Native American or American Indian','Asian or Pacific Islander'},...
                    'fontsize',14); 
E.ed = uicontrol('style','edit',...
                    'units','normalized',...
                    'position',[0.55 0.59 0.13 0.05],...
                    'string','other',...
                    'fontsize',14);
                
set([E.pop,E.ed],{'callback'},{{@Epop_callback,E};{@Eed_callback,E}});

    function [] = Epop_callback(varargin)
        % Callback for the popup.
%         E = varargin{3}; %Get the structure
        pop = get(E.pop,{'string','val'}); %Get the users choice.
        set(E.ed,'string',pop{1}{pop{2}}); %Assign user's choice to edit box.
    end

    function [] = Eed_callback(varargin)
        % Callback for the edit.
%         E = varargin{3}; %Get the structure
        ed = get(E.ed,'string'); %Get the string from the edit box.
        pop = get(E.pop,{'string','value'}); %Get the users choice.
        % Check if edit string is found in pop-up list.
        tmp = strmatch(ed,pop{1});
        if ~isempty(tmp) %set the pop-up to match the edit.
            set(E.pop,'value',tmp)
        else %add new element to the popup at the bottom.
            set(E.pop,'string',{pop{1}{:},ed},'value',length(pop{1})+1);
        end
    end


%% Handedness
H.txt = uicontrol('style','edit', 'Enable','inactive',...
                    'units','normalized',...
                    'position',[0.3 0.52 0.1 0.05],...
                    'string','Handedness:',...
                    'horizontalalign','center',...
                    'fontweight','bold',...
                    'fontsize',14);
H.pop = uicontrol('style','pop',...
                    'units','normalized',... 
                    'position',[0.41 0.52 0.1 0.05],...
                    'string',{'Right','Left'},...
                    'fontsize',14);        
                
%% Finish button
S.pb = uicontrol('style','pushbutton',...
                 'units','normalized',...
                 'position',[0.45 0.4 0.1 0.05],...
                 'string','Submit',...
                 'fontsize',16,...
                 'callback',{@pb_callback});
%                  'callback',uiresume(gcbf));

uiwait(S.fh) %Prevent all other processes from starting until closed.

    function [] = pb_callback(varargin)
        % Callback for pushbutton
        age = str2num(get(A.ed,'string'));
  
        g = get(G.pop,{'string','val'}); gender = g{2};
        % gender = g{1}{g{2}}; %Gives 'Male' or 'Female'
        
        e = get(E.pop,{'string','val'}); %Note: anything greater than 5 is 'other'
        if e{2} > 5
            ethnicity = e{1}{e{2}}; %gives the string they enter in the 'other' edit box
        else
            ethnicity  = e{2}; %otherwise, gives their choice (as a number) from the pop-down box.
        end

        h = get(H.pop,{'string','val'}); handedness = h{2};
        % handedness = h{1}{h{2}}; %Gives 'Right' or 'Left'
        
        close(S.fh);
    end
end







    


